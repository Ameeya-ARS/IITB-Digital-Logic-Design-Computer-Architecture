


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             my_code,CODE,READWRITE
    2 00000000         
    3 00000000         start
    4 00000000 E3A00203        LDR              R0, =0x30000000 ;stores locatio
                                                            n of length of arra
                                                            y
    5 00000004 E5D01000        LDRB             R1, [R0]    ;stores size of gra
                                                            ph i.e no of vertic
                                                            es V 
    6 00000008 E3A00101        LDR              R0, =0x40000000
    7 0000000C E5D0C000        LDRB             R12, [R0]
    8 00000010 E3A00206        LDR              R0, =0x60000000 ;stores address
                                                             of adjacency matri
                                                            x G[][]
    9 00000014 E3A02207        LDR              R2, =0x70000000 ;to store the d
                                                            istances distance[]
                                                            
   10 00000018 E3A03205        LDR              R3, =0x50000000 ;boolean array 
                                                            to mark as visited 
                                                            visited[]
   11 0000001C E3A04105        LDR              R4, =0x40000001 ;matrix to stor
                                                            e the cost of i to 
                                                            j cost[][]
   12 00000020         
   13 00000020 E3A05000        MOV              R5, #0      ;start at index 0  
                                                            (acts as i)
   14 00000024 E3A06000        MOV              R6, #0      ;acts as j
   15 00000028 E3A07000        MOV              R7, #0      ;acts as count
   16 0000002C E3A08000        MOV              R8, #0      ;acts as mindistanc
                                                            e
   17 00000030 E3A09000        MOV              R9, #0      ;acts as nextnode
   18 00000034         
   19 00000034 E1550001 
                       for1    CMP              R5, R1
   20 00000038 AA000012        BGE              endfor1
   21 0000003C BAFFFFFF        BLT              for2
   22 00000040         
   23 00000040 E1560001 
                       for2    CMP              R6, R1
   24 00000044 AA00000C        BGE              endfor2
   25 00000048 E00A0195        MUL              R10, R5, R1 ;temp register to f
                                                            ind location of ith
                                                             row and jth column
                                                             = i*V + j
   26 0000004C E08AA006        ADD              R10, R10, R6
   27 00000050 E7D0B00A        LDRB             R11, [R0, R10] ;temp register t
                                                            o store G[i][j]
   28 00000054 E35B0000        CMP              R11, #0
   29 00000058 0A000000        BEQ              G_case1
   30 0000005C EA000003        B                G_case2
   31 00000060         
   32 00000060 E3A0E0FF 
                       G_case1 MOV              R14, #0xff  ;temp register to s
                                                            tore some kinf of I
                                                            NFINITY
   33 00000064 E7C4E00A        STRB             R14, [R4, R10] ;store cost[i][j
                                                            ] = INFINITY
   34 00000068 E2866001        ADD              R6, R6, #01
   35 0000006C EAFFFFF3        B                for2



ARM Macro Assembler    Page 2 


   36 00000070         
   37 00000070 E7C4B00A 
                       G_case2 STRB             R11, [R4, R10] ;store cost[i][j
                                                            ] = G[i][j]
   38 00000074 E2866001        ADD              R6, R6, #01
   39 00000078 EAFFFFF0        B                for2
   40 0000007C         
   41 0000007C E2855001 
                       endfor2 ADD              R5, R5, #01
   42 00000080 E0466001        SUB              R6, R6, R1
   43 00000084 EAFFFFEA        B                for1
   44 00000088         
   45 00000088 E3A05000 
                       endfor1 MOV              R5, #00     ;now onwards R0 con
                                                            tains source id
   46 0000008C         
   47 0000008C E1550001 
                       for3    CMP              R5, R1
   48 00000090 AA000007        BGE              endfor3
   49 00000094 E3A0E000        MOV              R14, #00    ;temp register
   50 00000098 E7C3E005        STRB             R14, [R3, R5] ;visited[i] = 0
   51 0000009C E00A019C        MUL              R10, R12, R1
   52 000000A0 E08AA005        ADD              R10, R10, R5
   53 000000A4 E7D4E00A        LDRB             R14, [R4, R10] 
                                                            ;cost[startnode][i]
                                                            
   54 000000A8 E7C2E005        STRB             R14, [R2, R5] ;distance[i] = co
                                                            st[startnode][i]
   55 000000AC E2855001        ADD              R5, R5, #01 ;i++
   56 000000B0 EAFFFFF5        B                for3
   57 000000B4         
   58 000000B4 E3A0E000 
                       endfor3 MOV              R14, #00
   59 000000B8 E7C2E00C        STRB             R14, [R2, R12] ;distance[startn
                                                            ode] = 0
   60 000000BC E3A0E001        MOV              R14, #01
   61 000000C0 E7C3E00C        STRB             R14, [R3, R12] ;visited[startno
                                                            de] = 1
   62 000000C4 E3A07001        MOV              R7, #01     ;count = 1
   63 000000C8         
   64 000000C8 E1570001 
                       while1  CMP              R7, R1
   65 000000CC AA000029        BGE              endwhile1
   66 000000D0 E3A080FF        MOV              R8, #0xff   ;mindistance=INFINI
                                                            TY
   67 000000D4         
   68 000000D4 E3A05000        MOV              R5, #00
   69 000000D8 EAFFFFFF        B                for4
   70 000000DC         
   71 000000DC E1550001 
                       for4    CMP              R5, R1
   72 000000E0 AA00000D        BGE              endfor4
   73 000000E4 E7D3A005        LDRB             R10, [R3, R5]
   74 000000E8 E35A0000        CMP              R10, #00    ;visited[i]==0
   75 000000EC 0A000000        BEQ              cont1
   76 000000F0 EA000007        B                nextiter
   77 000000F4         
   78 000000F4 E7D2A005 
                       cont1   LDRB             R10, [R2, R5]



ARM Macro Assembler    Page 3 


   79 000000F8 E15A0008        CMP              R10, R8
   80 000000FC BA000000        BLT              cont2
   81 00000100 EA000003        B                nextiter
   82 00000104         
   83 00000104 E7D2A005 
                       cont2   LDRB             R10, [R2, R5] ;distance[i]
   84 00000108 E1A0800A        MOV              R8, R10     ;mindistance = dist
                                                            ance[i]
   85 0000010C E1A09005        MOV              R9, R5
   86 00000110 EAFFFFFF        B                nextiter
   87 00000114         
   88 00000114         nextiter
   89 00000114 E2855001        ADD              R5, R5, #01
   90 00000118 EAFFFFEF        B                for4
   91 0000011C         
   92 0000011C E3A0A001 
                       endfor4 MOV              R10, #01
   93 00000120 E7C3A009        STRB             R10, [R3, R9] ;visited[nextnode
                                                            ]=1
   94 00000124 E3A05000        MOV              R5, #00
   95 00000128         
   96 00000128 E1550001 
                       for5    CMP              R5, R1
   97 0000012C AA00000F        BGE              endfor5
   98 00000130 E7D3E005        LDRB             R14, [R3, R5]
   99 00000134 E35E0000        CMP              R14, #00    ;visited[i]==0
  100 00000138 0A000000        BEQ              cont3
  101 0000013C EA000009        B                next_iter
  102 00000140         
  103 00000140 E00A0199 
                       cont3   MUL              R10, R9, R1 ;R10 = nextnode*V +
                                                             i
  104 00000144 E08AA005        ADD              R10, R10, R5
  105 00000148 E7D4B00A        LDRB             R11, [R4, R10] 
                                                            ;cost[nextnode][i]
  106 0000014C E08BB008        ADD              R11, R11, R8 ;R11 = cost[nextno
                                                            de][i] + mindistanc
                                                            e
  107 00000150 E7D2C005        LDRB             R12, [R2, R5] 
                                                            ;R12 = distance[i]
  108 00000154 E15B000C        CMP              R11, R12
  109 00000158 BA000000        BLT              cont4
  110 0000015C EA000001        B                next_iter
  111 00000160         
  112 00000160 E7C2B005 
                       cont4   STRB             R11, [R2, R5] ;distance[i] = co
                                                            st[nextnode][i] + m
                                                            indistance
  113 00000164 EAFFFFFF        B                next_iter
  114 00000168         
  115 00000168         next_iter
  116 00000168 E2855001        ADD              R5, R5, #01 ;i++
  117 0000016C EAFFFFED        B                for5
  118 00000170         
  119 00000170 E2877001 
                       endfor5 ADD              R7, R7, #01 ;count++
  120 00000174 EAFFFFD3        B                while1
  121 00000178         
  122 00000178         endwhile1



ARM Macro Assembler    Page 4 


  123 00000178 EAFFFFFF        B                final
  124 0000017C         
  125 0000017C EAFFFFFE 
                       final   B                final
  126 00000180         
  127 00000180                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\prog3.d -o.\objects\prog3.o -IC:\Keil_v5\ARM\RV31\INC --predefine="__UVI
SION_VERSION SETA 536" --list=.\listings\prog3.lst prog3.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

G_case1 00000060

Symbol: G_case1
   Definitions
      At line 32 in file prog3.asm
   Uses
      At line 29 in file prog3.asm
Comment: G_case1 used once
G_case2 00000070

Symbol: G_case2
   Definitions
      At line 37 in file prog3.asm
   Uses
      At line 30 in file prog3.asm
Comment: G_case2 used once
cont1 000000F4

Symbol: cont1
   Definitions
      At line 78 in file prog3.asm
   Uses
      At line 75 in file prog3.asm
Comment: cont1 used once
cont2 00000104

Symbol: cont2
   Definitions
      At line 83 in file prog3.asm
   Uses
      At line 80 in file prog3.asm
Comment: cont2 used once
cont3 00000140

Symbol: cont3
   Definitions
      At line 103 in file prog3.asm
   Uses
      At line 100 in file prog3.asm
Comment: cont3 used once
cont4 00000160

Symbol: cont4
   Definitions
      At line 112 in file prog3.asm
   Uses
      At line 109 in file prog3.asm
Comment: cont4 used once
endfor1 00000088

Symbol: endfor1
   Definitions
      At line 45 in file prog3.asm
   Uses
      At line 20 in file prog3.asm
Comment: endfor1 used once
endfor2 0000007C

Symbol: endfor2



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 41 in file prog3.asm
   Uses
      At line 24 in file prog3.asm
Comment: endfor2 used once
endfor3 000000B4

Symbol: endfor3
   Definitions
      At line 58 in file prog3.asm
   Uses
      At line 48 in file prog3.asm
Comment: endfor3 used once
endfor4 0000011C

Symbol: endfor4
   Definitions
      At line 92 in file prog3.asm
   Uses
      At line 72 in file prog3.asm
Comment: endfor4 used once
endfor5 00000170

Symbol: endfor5
   Definitions
      At line 119 in file prog3.asm
   Uses
      At line 97 in file prog3.asm
Comment: endfor5 used once
endwhile1 00000178

Symbol: endwhile1
   Definitions
      At line 122 in file prog3.asm
   Uses
      At line 65 in file prog3.asm
Comment: endwhile1 used once
final 0000017C

Symbol: final
   Definitions
      At line 125 in file prog3.asm
   Uses
      At line 123 in file prog3.asm
      At line 125 in file prog3.asm

for1 00000034

Symbol: for1
   Definitions
      At line 19 in file prog3.asm
   Uses
      At line 43 in file prog3.asm
Comment: for1 used once
for2 00000040

Symbol: for2
   Definitions
      At line 23 in file prog3.asm



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 21 in file prog3.asm
      At line 35 in file prog3.asm
      At line 39 in file prog3.asm

for3 0000008C

Symbol: for3
   Definitions
      At line 47 in file prog3.asm
   Uses
      At line 56 in file prog3.asm
Comment: for3 used once
for4 000000DC

Symbol: for4
   Definitions
      At line 71 in file prog3.asm
   Uses
      At line 69 in file prog3.asm
      At line 90 in file prog3.asm

for5 00000128

Symbol: for5
   Definitions
      At line 96 in file prog3.asm
   Uses
      At line 117 in file prog3.asm
Comment: for5 used once
my_code 00000000

Symbol: my_code
   Definitions
      At line 1 in file prog3.asm
   Uses
      None
Comment: my_code unused
next_iter 00000168

Symbol: next_iter
   Definitions
      At line 115 in file prog3.asm
   Uses
      At line 101 in file prog3.asm
      At line 110 in file prog3.asm
      At line 113 in file prog3.asm

nextiter 00000114

Symbol: nextiter
   Definitions
      At line 88 in file prog3.asm
   Uses
      At line 76 in file prog3.asm
      At line 81 in file prog3.asm
      At line 86 in file prog3.asm

start 00000000



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: start
   Definitions
      At line 3 in file prog3.asm
   Uses
      None
Comment: start unused
while1 000000C8

Symbol: while1
   Definitions
      At line 64 in file prog3.asm
   Uses
      At line 120 in file prog3.asm
Comment: while1 used once
23 symbols
354 symbols in table
